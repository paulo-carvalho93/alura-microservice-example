package br.com.restaraunte.pedidoservice.service;

import java.time.LocalDate;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.restaurante.pedidoservice.model.Pedido;
import br.com.restaurante.pedidoservice.model.PedidoItem;
import br.com.restaurante.pedidoservice.model.SituacaoPedidoEnum;
import br.com.restaurante.pedidoservice.repository.PedidoRepository;

@Service
public class PedidoService {
	
	@Autowired
	private PedidoRepository pedidoRepository;
	
	@Autowired
	private PedidoItemService pedidoItemService;
	
	public void salvar(Pedido pedido) throws Exception {
		
		try {
			
		pedido.setSituacao(SituacaoPedidoEnum.PENDENTE_APROVACAO);
		pedido.setDataPedido(LocalDate.now());
		pedidoRepository.save(pedido);
		
		for (PedidoItem pedidoItem : pedido.getPedidoItens()) {
			pedidoItem.setPedido(pedido);
			pedidoItemService.salvar(pedidoItem);
		}
		
		} catch (Exception e) {
			throw new Exception("Atenção! Erro ao salvar o pedido.");
		}
	}

	public List<Pedido> findAll() {
		List<Pedido> pedidos = (List<Pedido>) pedidoRepository.findAll();
		return pedidos;
	}

	public Pedido findById(Long id) {
		return pedidoRepository.findById(id).orElse(new Pedido());
	}

	public void montagemPedido(Pedido pedido) throws Exception {
		
		try {
			pedido.setSituacao(SituacaoPedidoEnum.MONTANDO_PEDIDO);
			pedido.setDataPedido(LocalDate.now());
			pedidoRepository.save(pedido);
			
			for (PedidoItem pedidoItem : pedido.getPedidoItens()) {
				pedidoItem.setPedido(pedido);
				pedidoItemService.salvar(pedidoItem);
			}
		} catch (Exception e) {
			throw new Exception("Atenção! Erro ao tentar montar o pedido.");
		}
	}
}