package br.com.restaurante.restauranteservice.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import br.com.restaurante.restauranteservice.model.Restaurante;
import br.com.restaurante.restauranteservice.service.RestauranteService;

@RestController
@RequestMapping("/restaurantes")
public class RestauranteController {

	@Autowired
	private RestauranteService restauranteService;

	// Inclusão de novo restaurante via POST
	@RequestMapping(value = "/salvar", method = RequestMethod.POST)
	public void salvar(@RequestBody Restaurante restaurante) {
		restauranteService.salvar(restaurante);
	}
	
	// Atualização de restaurante via PUT
	@RequestMapping(value = "/atualizar/{id}", method = RequestMethod.PUT)
	public Restaurante atualizar(@RequestBody Restaurante restaurante) {
		return restauranteService.atualizar(restaurante);
	}
	
	@RequestMapping(value = "/{restauranteName}/lista", method = RequestMethod.GET)
    public Page<Restaurante> findByRestauranteNome(@PathVariable String restauranteNome, Pageable pageable) {
        return restauranteService.findByRestauranteNome(restauranteNome, pageable);
    }
	
	@RequestMapping(value = "/{restauranteName}", method = RequestMethod.GET)
    public Restaurante findByRestauranteNome(@PathVariable String restauranteNome) {
        return restauranteService.findFirstByRestauranteNome(restauranteNome);
    }
	
	@RequestMapping(value = "/{id}", method = RequestMethod.GET)
    public Restaurante findByRestauranteId(@PathVariable String restauranteId) {
        return restauranteService.findByRestauranteId(restauranteId);
    }
	
	// Procurar todos os restaurantes
	@RequestMapping(method = RequestMethod.GET)
	public List<Restaurante> findAll() {
		return restauranteService.findAll();
	}
	
}